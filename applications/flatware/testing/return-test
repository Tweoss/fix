#!/usr/bin/perl -w

use strict;

if ((scalar @ARGV) != 3) {
  die qq{Usage: $0 stateless-tester compile-tool return3.wasm};
}

my ($executable, $compile, $wasm) = @ARGV;

sub check_return($) {
  my ($expected_retval) = @_;
  my ($expected_stdout) = "";

  my $result = `$executable tree:2 string:\"0\" thunk: tree:3 string:unused name:$compile file:$wasm 2>&1`;

  if ($?) {
    die qq{Failure in running return-test: $result};
  }

  my (undef, $substring) = split( 'Result:\n', $result );
  ($_, my $retval) = $substring =~ m{0\. Blob \(4 bytes\): (.*) \(uint32:(\d*)\)};
  ($_, my $stdout) = $substring =~ m{1\. Blob \((\d*) bytes\): \"(.*)\"};

  if ( !( $retval eq $expected_retval ) or !( $stdout eq $expected_stdout ) ) {
    print STDERR qq{Got result:\n$result\n};
    die qq{Wrong return value ($retval, was expecting $expected_retval)};
  }
}

check_return(3);
